/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 SM_Icon_Tick_01.glb -tT 
Files: SM_Icon_Tick_01.glb [240.32KB] > SM_Icon_Tick_01-transformed.glb [35.71KB] (85%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import iconTick01 from "../../assets/SM_Icon_Tick_01-transformed.glb?url";


type GLTFResult = GLTF & {
  nodes: {
    SM_Icon_Tick_01: THREE.Mesh
  }
  materials: {
    M_PolygonPrototype_03: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function SMIconTick01({ children, ...props }: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(iconTick01) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh 
      scale={[0.1,0.1,0.1]}
      geometry={nodes.SM_Icon_Tick_01.geometry}
      //  material={materials.M_PolygonPrototype_03} 
      >
        {children}
        </mesh>
    </group>
  )
}

useGLTF.preload(iconTick01)
