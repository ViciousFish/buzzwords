// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./buzzwords.db"
}


model User {
  id String     @id
  nickname    String?
  googleId String?
  auth_tokens AuthToken[] 
  game_user GameUser[]
  moves Move[]
}

model AuthToken {
  token String @id
  user User @relation(fields: [userId], references: [id])
  userId String
  createdDate DateTime @default(now())
  deleted Boolean
  state String? @unique
}

model Game {
  id String @id
  turn Int
  game_over Boolean
  deleted Boolean
  winner Int?
  vs_ai Boolean
  difficulty Int
  users GameUser[]
  moves Move[]
  cells Cell[]
  createdDate DateTime @default(now())
}

model GameUser {
  @@id([game_id, user_id])
  game_id String
  game Game @relation(fields: [game_id], references: [id])
  user_id String
  user User @relation(fields: [user_id], references: [id])
  player_number Int
}

model Move {
  id String     @id @default(cuid())
  game_id String
  game Game @relation(fields: [game_id], references: [id])
  move_number Int
  shuffle Boolean
  pass Boolean
  forfeit Boolean
  user_id String
  user User @relation(fields: [user_id], references: [id])
  date DateTime @default(now())
  cells Cell[]
  coords MoveCoord[]
  word String?
}

model MoveCoord {
  id Int @id @default(autoincrement())
  move_id String
  move Move @relation(fields: [move_id], references: [id])
  q Int
  r Int
  index Int
}

model Cell {
  id Int     @id @default(autoincrement())
  game_id String
  game Game @relation(fields: [game_id], references: [id])
  move_id String?
  move Move? @relation(fields: [move_id], references: [id])
  q Int
  r Int
  value String
  capital Boolean
  owner Int
}
