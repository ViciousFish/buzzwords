name: Electron build
on: [push]
  # push:
  #   tags:
  #     - v*
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: 'yarn'
      - run: yarn build-electron && yarn dist
        working-directory: ./client
      - uses: actions/upload-artifact@v3
        with:
          name: release-linux
          path: ./client/release/*/*.snap
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: 'yarn'
      - run: yarn build-electron && yarn dist && ls release
        working-directory: ./client
        shell: bash
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: 'yarn'
      - run: yarn build-electron && yarn dist
        working-directory: ./client
      - uses: actions/upload-artifact@v3
        with:
          name: release-mac
          path: ./client/release/*/*.dmg

  upload:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-mac
      - build-windows
    steps:
      - uses: actions/download-artifact@v3
      - run: mkdir -p /tmp/release && cp **/*.dmg /tmp/release/ && cp **/*.snap /tmp/release/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: /tmp/release
      # - name: Release
      #   uses: fnkr/github-action-ghr@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     GHR_COMPRESS: xz
      #     GHR_PATH: build/ # TODO TODO TODO
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
